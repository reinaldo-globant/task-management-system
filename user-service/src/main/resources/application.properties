# Server Configuration
server.port=8081
spring.application.name=user-service

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/userdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwtSecret=${JWT_SECRET:defaultSecretKey}
app.jwtExpirationMs=${JWT_EXPIRATION:86400000}

# Service-to-Service Token
app.service.token=${SERVICE_TOKEN:mySecureServiceToken123}

# gRPC Configuration
grpc.server.port=${GRPC_PORT:9090}
grpc.server.security.enabled=false
grpc.server.security.authentication.enabled=false
grpc.server.security.authorization.enabled=false
# Exclude gRPC security autoconfiguration
spring.autoconfigure.exclude=net.devh.boot.grpc.server.autoconfigure.GrpcServerSecurityAutoConfiguration

# OAuth2 Configuration
app.oauth2.redirectUri=${OAUTH2_REDIRECT_URI:http://localhost:3000/oauth2/redirect}

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${app.oauth2.redirectUri}

spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:your-github-client-id}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:your-github-client-secret}
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri=${app.oauth2.redirectUri}

spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID:your-microsoft-client-id}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET:your-microsoft-client-secret}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
spring.security.oauth2.client.registration.microsoft.redirect-uri=${app.oauth2.redirectUri}
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.microsoft.client-name=Microsoft

spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/v1.0/me
spring.security.oauth2.client.provider.microsoft.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys

# Logging Configuration
logging.level.org.springframework.security=DEBUG